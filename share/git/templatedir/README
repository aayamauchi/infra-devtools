This directory contains git templates which can be used to override
the default templates.

Step one: clone the infra-devtools repository,

  git clone git@bitbucket.org:redbookplatform/infra-devtools.git <devtools clone directory>

* To make the hooks generally available whenever a repository is cloned:

  mkdir -p ~/.git_templatedir/hooks

Add the following to your ~/.gitconfig

[init]
	templatedir = ~/.git_templatedir

Symlink the hooks from the checkout into this directory, using:

  for f in <devtools clone directory>/share/git/templatedir/hooks/* ; do
    ln -snf ${f} ~/.git_templatedir/hooks/${f##*/}
  done

* To make the hooks available on a per-repository basis, use:

  for f in <devtools clone directory>/share/git/templatedir/hooks/* ; do
    ln -snf ${f} <some git clone director>/.git/hooks/${f##*/}
  done

The global configuration will make the hooks the defaults on any new git clone.
The per-repository configuration will only make the hooks available for
the specified repository.  In either case, using symlinks means that the
hooks from the devtools repository can coexist with other hooks you may
have in either of these directories.

A very useful setting (for vi/vim users) when using the prepare-commit-msg
hook is the following:

export GIT_EDITOR='vim +normal\ \$ -c startinsert!'

With this setting in the environment, git will go to the end of the first
line of the commit message and open in edit mode.  Adding this to a
bashrc makes it the default for the terminal session.
